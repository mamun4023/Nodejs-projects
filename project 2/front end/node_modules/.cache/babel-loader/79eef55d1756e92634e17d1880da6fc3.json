{"ast":null,"code":"var _jsxFileName = \"/home/node/Desktop/projects/project 2/front end/src/components/auth/login.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport classnames from 'classnames';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChangeHandler = this.onChange.bind(this);\n    this.onSubmitHandler = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(userData);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-8 m-auto\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"display-4 text-center\",\n                    children: \"Log In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"lead text-center\",\n                    children: \" \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                    autoComplete: \"off\",\n                    onSubmit: this.onSubmitHandler,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"email\",\n                        className: classnames(\"form-control form-control-lg\", {\n                          'is-invalid': errors.email\n                        }),\n                        placeholder: \"Email Address\",\n                        name: \"email\",\n                        value: this.state.value,\n                        onChange: this.onChangeHandler\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 29\n                      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"invalid-feedback\",\n                        children: [\" \", errors.email, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"password\",\n                        className: classnames(\"form-control form-control-lg\", {\n                          'is-invalid': errors.password\n                        }),\n                        placeholder: \"Password\",\n                        name: \"password\",\n                        value: this.state.value,\n                        onChange: this.onChangeHandler\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 29\n                      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"invalid-feedback\",\n                        children: [\" \", errors.password, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 96,\n                        columnNumber: 52\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"submit\",\n                      className: \"btn btn-info btn-block mt-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  errors: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/home/node/Desktop/projects/project 2/front end/src/components/auth/login.js"],"names":["React","axios","classnames","propTypes","connect","loginUser","Login","Component","constructor","props","state","email","password","errors","onChangeHandler","onChange","bind","onSubmitHandler","onSubmit","componentWillReceiveProps","nextProps","auth","isAuthenticated","history","push","setState","e","target","name","value","preventDefault","userData","render","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport classnames from 'classnames';\nimport propTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {loginUser} from '../../actions/authActions';\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            email : \"\",\n            password : \"\",\n            errors : {}\n        }\n\n        this.onChangeHandler = this.onChange.bind(this);\n        this.onSubmitHandler = this.onSubmit.bind(this);\n\n    }\n\n    componentWillReceiveProps(nextProps){\n\n      if(nextProps.auth.isAuthenticated){\n        this.props.history.push('/dashboard')\n      }\n\n      if(nextProps.errors){\n        this.setState({errors : nextProps.errors})\n      }\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n\n   onSubmit(e){\n       e.preventDefault();\n\n       const userData = {\n           email : this.state.email,\n           password : this.state.password\n       }\n\n       this.props.loginUser(userData)\n\n\n   }\n\n    render(){\n      const {errors} = this.state;\n      \n\n          \n  return(\n\n        <>\n          <div className = \"row\">\n          <div className = \"col-md\"> </div>\n          <div className = \"col-md-6\"> \n            \n           \n                <div className=\"login\">\n                  <div className=\"container\">\n                    <div className=\"row\">\n                      <div className=\"col-md-8 m-auto\">\n                        <h1 className=\"display-4 text-center\">Log In</h1>\n                        <p className=\"lead text-center\"> </p>\n                        <form  autoComplete = \"off\" onSubmit = {this.onSubmitHandler}>\n\n                          <div className=\"form-group\">\n                            <input \n                              type=\"email\" \n                              className = {classnames(\"form-control form-control-lg\", {'is-invalid' : errors.email})}\n                              placeholder=\"Email Address\" \n                              name=\"email\" \n                              value = {this.state.value}\n                              onChange = {this.onChangeHandler}\n                              \n                              />\n                              {errors.email && (<div className = \"invalid-feedback\"> {errors.email} </div>)}\n\n                          </div>\n\n                          <div className=\"form-group\">\n                            <input \n                              type=\"password\" \n                              className = {classnames(\"form-control form-control-lg\", {'is-invalid' : errors.password})}\n                              placeholder=\"Password\" \n                              name=\"password\" \n                              value = {this.state.value}\n                              onChange = {this.onChangeHandler}\n                        \n                              />\n                              {errors.password && (<div className = \"invalid-feedback\"> {errors.password} </div>)}\n                          </div>\n\n                          <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>          \n            </div>\n            <div className = \"col-md\"> </div>\n            </div>  \n       </>\n\n\n        )\n    }\n}\n\nLogin.propTypes = {\n  loginUser : propTypes.func.isRequired,\n  auth : propTypes.object.isRequired,\n  errors : propTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  auth : state.auth,\n  errors : state.errors\n})\n\nexport default connect(mapStateToProps, {loginUser}) (Login);"]},"metadata":{},"sourceType":"module"}