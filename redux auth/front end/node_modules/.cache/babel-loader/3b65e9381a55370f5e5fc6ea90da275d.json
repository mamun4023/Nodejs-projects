{"ast":null,"code":"var _jsxFileName = \"/home/node/Desktop/projects/redux auth/front end/src/components/container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPost } from './redux/counter/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Container = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state);\n  useEffect(() => {\n    dispatch(fetchPost());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", post.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 35\n    }, this))\n  }, void 0, false);\n};\n\n_s(Container, \"ENUDqdKwIx40U6eZCutSSehqnb4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Container;\nexport default Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/home/node/Desktop/projects/redux auth/front end/src/components/container.js"],"names":["React","useEffect","useDispatch","useSelector","fetchPost","Container","dispatch","posts","state","map","post","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;;;AAKA,MAAMC,SAAS,GAAG,MAAK;AAAA;;AAEnB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,KAAK,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAV,CAAzB;AACAP,EAAAA,SAAS,CAAC,MAAK;AACXK,IAAAA,QAAQ,CAACF,SAAS,EAAV,CAAR;AAEH,GAHQ,EAGP,EAHO,CAAT;AAMA,sBACI;AAAA,cAIQG,KAAK,CAACE,GAAN,CAAUC,IAAI,iBAAI;AAAA,sBAAOA,IAAI,CAACC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB;AAJR,mBADJ;AAaH,CAvBD;;GAAMN,S;UAEeH,W,EACHC,W;;;KAHZE,S;AA0BN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport {useDispatch, useSelector } from 'react-redux';\nimport {fetchPost} from './redux/counter/actions'\n\n\n\n\nconst Container = ()=> {\n    \n    const dispatch = useDispatch();\n    const posts = useSelector(state => state);\n    useEffect(()=> {\n        dispatch(fetchPost())\n\n    },[])\n\n\n    return(\n        <>\n           \n\n            {\n                posts.map(post => <div> {post.title} </div>)\n            }\n           \n           \n\n        </>\n\n    )\n}\n\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}